//Right shift an array by k elements.
//Time complexity is O(2N)
//Space complexity is O(1)
//optimal solution
//practised on leetcode

class Solution {
    public void rotate(int[] nums, int k) {
        int n = nums.length;
        k = k % n; // Handle cases where k >= n
        reverse(nums, 0, n-k-1 );
        reverse(nums, n-k, n - 1);
        reverse(nums, 0, n - 1);
    }
    
    private void reverse(int[] nums, int start, int end) {
        while (start < end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
        
    }
}
